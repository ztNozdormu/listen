<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/listen-data/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a8bdaa96-d7fa-46cd-8d62-5171f3ee9cce" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/listen-data/src/process_swap.rs" beforeDir="false" afterPath="$PROJECT_DIR$/listen-data/src/process_swap.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/listen-data/src/processor/pump_amm_instruction_processor.rs" beforeDir="false" afterPath="$PROJECT_DIR$/listen-data/src/processor/pump_amm_instruction_processor.rs" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="RsBuildProfile:test" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="4LQge2d2" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2v5JcKoS74A18TaiRRpIqN8EHLZ" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Cargo.Run adapter [listen-adapter].executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Run adapter.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Run engine.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Run indexer.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test metadata::tests::test_fetch_mpl_by_mint.executor&quot;: &quot;Debug&quot;,
    &quot;Cargo.Test metadata::tests::test_fetch_spl_by_mint.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test metadata::tests::test_get_token_metadata.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test metadata::tests::test_spl_2022_mint.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test util::tests::test_get_jup_price.executor&quot;: &quot;Run&quot;,
    &quot;Docker.clickhouse/Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose-local.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.rust.reset.selective.auto.import&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;listen-dev&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Volumes/wdata/exchange/listen/vendor/nginx&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;npm.dev.executor&quot;: &quot;Run&quot;,
    &quot;org.rust.cargo.project.model.PROJECT_DISCOVERY&quot;: &quot;true&quot;,
    &quot;org.rust.cargo.project.model.impl.CargoExternalSystemProjectAware.subscribe.first.balloon&quot;: &quot;&quot;,
    &quot;org.rust.first.attach.projects&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;language.rust&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Volumes/wdata/exchange/listen/listen-interface/node_modules/typescript/lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;clickhouse&quot;,
      &quot;redis&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/vendor/nginx" />
      <recent name="$PROJECT_DIR$/listen-adapter" />
      <recent name="$PROJECT_DIR$/listen-data" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/listen-engine" />
    </key>
  </component>
  <component name="RunManager" selected="Cargo.Test metadata::tests::test_get_token_metadata">
    <configuration name="Run indexer" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="buildProfileId" value="release" />
      <option name="command" value="run --package listen-data --bin indexer" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/listen-data" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test metadata::tests::test_fetch_mpl_by_mint" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="buildProfileId" value="test" />
      <option name="command" value="test --package listen-data --lib metadata::tests::test_fetch_mpl_by_mint -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/listen-data" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test metadata::tests::test_fetch_spl_by_mint" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package listen-data --lib metadata::tests::test_fetch_spl_by_mint -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/listen-data" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test metadata::tests::test_get_token_metadata" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package listen-data --lib metadata::tests::test_get_token_metadata -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/listen-data" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test metadata::tests::test_spl_2022_mint" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package listen-data --lib metadata::tests::test_spl_2022_mint -- --ignored --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/listen-data" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/listen-engine" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Cargo.Test metadata::tests::test_get_token_metadata" />
        <item itemvalue="Cargo.Test metadata::tests::test_spl_2022_mint" />
        <item itemvalue="Cargo.Test metadata::tests::test_fetch_spl_by_mint" />
        <item itemvalue="Cargo.Test metadata::tests::test_fetch_mpl_by_mint" />
        <item itemvalue="Cargo.Run indexer" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$PROJECT_DIR$/../../rust/.cargo/bin" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SuiMoveProjectSettingsService_1">
    <option name="localSuiPath" value="/opt/homebrew/bin/sui" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="a8bdaa96-d7fa-46cd-8d62-5171f3ee9cce" name="Changes" comment="" />
      <created>1743429079773</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1743429079773</updated>
      <workItem from="1743429080946" duration="1276000" />
      <workItem from="1743477096759" duration="856000" />
      <workItem from="1743478056693" duration="8688000" />
      <workItem from="1743515028345" duration="118000" />
      <workItem from="1743557226377" duration="2621000" />
      <workItem from="1743818736239" duration="18023000" />
      <workItem from="1743933921673" duration="9568000" />
      <workItem from="1744028269023" duration="2945000" />
      <workItem from="1744075192432" duration="2649000" />
      <workItem from="1744101057815" duration="5809000" />
      <workItem from="1744114430582" duration="7692000" />
      <workItem from="1744162495136" duration="10276000" />
      <workItem from="1744199464353" duration="4975000" />
      <workItem from="1744250296718" duration="2556000" />
      <workItem from="1744255498067" duration="6600000" />
      <workItem from="1744355145654" duration="4044000" />
      <workItem from="1744600262543" duration="5302000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/listen-adapter/src/db/mod.rs</url>
          <line>60</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/listen-adapter/src/db/mod.rs</url>
          <line>66</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/privy/src/config.rs</url>
          <line>17</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>